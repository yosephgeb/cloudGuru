============ Installing docker and giving it privilege ========================
sudo apt-get update && \
sudo apt-get install -y ca-certificates curl && \
sudo install -m 0755 -d /etc/apt/keyrings && \
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc && \
sudo chmod a+r /etc/apt/keyrings/docker.asc && \
echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo \"$VERSION_CODENAME\") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null && \
sudo apt-get update && \
sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin && \
sudo usermod -a -G docker cloud_user

===================================================================================
docker info -: check everything about the docker like storage driver etc.
===================================================================================
setting the storage driver
1.set storage driver explicitly by providing flag to the docker daemon
sudo vi /usr/lib/systemd/system/docker.service -: open the file
ExecStart=/usr/bin/dockerd --storage-driver devicemapper -: add -- storage-driver devicemapper
sudo systemctl daemon-reload -: reload the docker daemon
sudo systemctl restart docker -: restart docker

2. using the daemon configuration file by adding the storage-driver: devicemapper to the json file
sudo vi /etc/docker/daemon.json
{
"storage-driver": "devicemapper"
}

sudo systemctl restart docker
sudo systemctl status docker
============================================================================================
flags
-it -: start an interactive shell : docker run -it ubuntu (Starts ubuntu and open a terminal to interact with the container)
-d/--detach -: starts without opening a terminal window/ in a detach mode
docker logs -: let you see the logs : docker logs -n 5 nginx / docker logs --tail 5 nginx (shows the first 5 line of log files from the end)
docker attach -: brings the container to the foreground that have been started with a -d/--detach mode
docker run -d --name nginx --restart unless-stopped -p 8080:80 --memory 500M --memory-reservation 256M nginx
=============================================================================================================================
docker logging
docker info | grep Logging -: to see what type of logging docker is using
sudo vi /etc/docker/daemon.json -: to change the docker logging driver
{
"log-driver": "json-file",
"log-opts": {
"max-size": "15m"
}
}

sudo systemctl restart docker : it have to be restarted after changing the daemon file

docker run --log-driver json-file --log-opt max-size=50m nginx : to change it for the running container

docker container inspect 'Container name'


===========================================================================================================
Docker swarm
docker swarm init --advertise-add PRIVATE-IP -: initializing manager node
docker swarm join --token SWMTKN-1-43yl9ve6z09mx72xj74c44qflz223id26vpz4suwsv84cg6219-1d9fl8z2rhywylga7wbjkyzyf 172.31.17.108:2377 : generated by the init to be used by the worker node 

docker swan join-token worker/manager (which ever you want to join to the swarm as)
docker node ls : shows all the nodes. Have to be run from the manager node
docker node inspect/demote/promote/ps/rm/update/ 'Node name'
==================================================================================================

Docker swarm buck up
- in the manager node stop it, create a tar file copy of the folder /var/lib/docker/warm . then restart the docker
sudo systemctl stop docker
sudo tar -zvcf backup.tar.gz -C /var/lib/docker/swarm .
sudo systemctl start docker

Restore the back up
- in the manager node stop it , delete the content of the /var/lib/swarm folder, copy the content from the back up to the /var/lib/swarm, restart the docker 
sudo systemctl stop docker
sudo rm -rf /var/lib/docker/swarm/*
sudo tar -zxvf backup.tar.gz -C /var/lib/docker/swarm/
sudo systemctl start docker
docker node ls








